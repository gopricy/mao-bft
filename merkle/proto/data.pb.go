// Code generated by protoc-gen-go. DO NOT EDIT.
// source: data.proto
// protoc -I proto proto/data.proto --go_out=plugins=grpc:proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A merkle proof is a data structure that proves a content is stored in the Merkle tree.
type MerkleProof struct {
	// The root of Merkle tree, it's a SHA256 hash.
	Root []byte `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	// the proof pairs from bottom up.
	ProofPairs           []*ProofPair `protobuf:"bytes,2,rep,name=proof_pairs,json=proofPairs,proto3" json:"proof_pairs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MerkleProof) Reset()         { *m = MerkleProof{} }
func (m *MerkleProof) String() string { return proto.CompactTextString(m) }
func (*MerkleProof) ProtoMessage()    {}
func (*MerkleProof) Descriptor() ([]byte, []int) {
	return fileDescriptor_871986018790d2fd, []int{0}
}

func (m *MerkleProof) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerkleProof.Unmarshal(m, b)
}
func (m *MerkleProof) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerkleProof.Marshal(b, m, deterministic)
}
func (m *MerkleProof) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerkleProof.Merge(m, src)
}
func (m *MerkleProof) XXX_Size() int {
	return xxx_messageInfo_MerkleProof.Size(m)
}
func (m *MerkleProof) XXX_DiscardUnknown() {
	xxx_messageInfo_MerkleProof.DiscardUnknown(m)
}

var xxx_messageInfo_MerkleProof proto.InternalMessageInfo

func (m *MerkleProof) GetRoot() []byte {
	if m != nil {
		return m.Root
	}
	return nil
}

func (m *MerkleProof) GetProofPairs() []*ProofPair {
	if m != nil {
		return m.ProofPairs
	}
	return nil
}

// ProofPair defines 2 hash values in the same layer of Merkle tree, that jointly calculate the parent.
// For example:
// * (parent primary)
// | \
// *  * secondary
// primary
type ProofPair struct {
	// primary is the content's ancestor node hash value.
	Primary []byte `protobuf:"bytes,1,opt,name=primary,proto3" json:"primary,omitempty"`
	// secondary is the helper of primary, in order to get the parent node's hash.
	Secondary            []byte   `protobuf:"bytes,2,opt,name=secondary,proto3" json:"secondary,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProofPair) Reset()         { *m = ProofPair{} }
func (m *ProofPair) String() string { return proto.CompactTextString(m) }
func (*ProofPair) ProtoMessage()    {}
func (*ProofPair) Descriptor() ([]byte, []int) {
	return fileDescriptor_871986018790d2fd, []int{1}
}

func (m *ProofPair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProofPair.Unmarshal(m, b)
}
func (m *ProofPair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProofPair.Marshal(b, m, deterministic)
}
func (m *ProofPair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProofPair.Merge(m, src)
}
func (m *ProofPair) XXX_Size() int {
	return xxx_messageInfo_ProofPair.Size(m)
}
func (m *ProofPair) XXX_DiscardUnknown() {
	xxx_messageInfo_ProofPair.DiscardUnknown(m)
}

var xxx_messageInfo_ProofPair proto.InternalMessageInfo

func (m *ProofPair) GetPrimary() []byte {
	if m != nil {
		return m.Primary
	}
	return nil
}

func (m *ProofPair) GetSecondary() []byte {
	if m != nil {
		return m.Secondary
	}
	return nil
}

func init() {
	proto.RegisterType((*MerkleProof)(nil), "proto.MerkleProof")
	proto.RegisterType((*ProofPair)(nil), "proto.ProofPair")
}

func init() { proto.RegisterFile("data.proto", fileDescriptor_871986018790d2fd) }

var fileDescriptor_871986018790d2fd = []byte{
	// 150 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0x49, 0x2c, 0x49,
	0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0x21, 0x5c, 0xdc, 0xbe, 0xa9,
	0x45, 0xd9, 0x39, 0xa9, 0x01, 0x45, 0xf9, 0xf9, 0x69, 0x42, 0x42, 0x5c, 0x2c, 0x45, 0xf9, 0xf9,
	0x25, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x3c, 0x41, 0x60, 0xb6, 0x90, 0x21, 0x17, 0x77, 0x01, 0x48,
	0x32, 0xbe, 0x20, 0x31, 0xb3, 0xa8, 0x58, 0x82, 0x49, 0x81, 0x59, 0x83, 0xdb, 0x48, 0x00, 0x62,
	0x8c, 0x1e, 0x58, 0x5b, 0x40, 0x62, 0x66, 0x51, 0x10, 0x57, 0x01, 0x8c, 0x59, 0xac, 0xe4, 0xcc,
	0xc5, 0x09, 0x97, 0x10, 0x92, 0xe0, 0x62, 0x2f, 0x28, 0xca, 0xcc, 0x4d, 0x2c, 0xaa, 0x84, 0x1a,
	0x0b, 0xe3, 0x0a, 0xc9, 0x70, 0x71, 0x16, 0xa7, 0x26, 0xe7, 0xe7, 0xa5, 0x80, 0xe4, 0x98, 0xc0,
	0x72, 0x08, 0x81, 0x24, 0x36, 0xb0, 0x0d, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc5, 0x2a,
	0x00, 0x3d, 0xb6, 0x00, 0x00, 0x00,
}
